{"version":3,"sources":["components/Profile/Profile.module.css","components/Friendlist/Friendlist.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/Friendlist/Friendlist.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","imgURL","name","tag","location","alt","stats","className","styles","profile","description","src","avatar","Object","keys","map","item","key","label","quantity","defaultProps","Statistics","title","statistics","statList","stata","id","percentage","FriendListItem","isOnline","friendListItem","isOfline","width","Friendlist","friends","friendList","friend","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.95a654f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"name\":\"Profile_name__2Psdw\",\"avatar\":\"Profile_avatar__aV4u5\",\"stats\":\"Profile_stats__25zJx\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"Friendlist_friendList__3xf6b\",\"friendListItem\":\"Friendlist_friendListItem__2jNCI\",\"avatar\":\"Friendlist_avatar___3Pla\",\"status\":\"Friendlist_status__2LFoF\",\"isOnline\":\"Friendlist_isOnline__bbYnZ Friendlist_status__2LFoF\",\"isOfline\":\"Friendlist_isOfline__3ga8Q Friendlist_status__2LFoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"statList\":\"Statistics_statList__3BR2u\",\"title\":\"Statistics_title__3PVIg\",\"item\":\"Statistics_item__1vE2T\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"odd-row\":\"TransactionHistory_odd-row__2U80x\",\"first\":\"TransactionHistory_first__QDTu4\",\"last\":\"TransactionHistory_last__3ik-l\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ imgURL, name, tag, location, alt, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={imgURL} alt={alt} className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>@{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n    <ul className={styles.stats}>\n      {Object.keys(stats).map(item => (\n        <li key={item}>\n          <span className={styles.label}>{item}</span>\n          <span className={styles.quantity}>{stats[item]}</span>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nProfile.defaultProps = {\n  alt: 'user avatar',\n};\n\nProfile.propTypes = {\n  imgURL: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\n// Цвет фона элемента статистики в оформлении можно пропустить, либо создать функцию для генерации случайного цвета.\n\nconst Statistics = ({ stats = [], title }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n    <ul className={styles.statList}>\n      {stats.map(stata => (\n        <li className={styles.item} key={stata.id}>\n          <span className={styles.label}>{stata.label}</span>\n          <span className={styles.percentage}>{stata.percentage}</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../Friendlist/Friendlist.module.css';\n\nconst FriendListItem = ({ isOnline, avatar, name, id }) => (\n  <li className={styles.friendListItem} key={id}>\n    <span className={isOnline ? styles.isOnline : styles.isOfline}></span>\n    <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\n    <p className={styles.name}>{name}</p>\n  </li>\n);\n\nFriendListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Friendlist.module.css';\nimport FriendlistItem from '../FriendListItem/FriendListItem';\n\nconst Friendlist = ({ friends = [] }) => (\n  <ul className={styles.friendList}>\n    {friends.map(friend => (\n      <FriendlistItem\n        id={friend.id}\n        avatar={friend.avatar}\n        name={friend.name}\n        isOnline={friend.isOnline}\n      />\n    ))}\n  </ul>\n);\n\nFriendlist.defaultProps = {\n  alt: 'user avatar',\n};\n\nFriendlist.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default Friendlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(item => (\n        <tr key={item.id}>\n          <td>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport user from './Profile/user.json';\nimport statisticalData from './Statistics/statistical-data.json';\nimport friends from './Friendlist/friends.json';\nimport transactions from './TransactionHistory/transactions.json';\nimport Profile from './Profile/Profile';\nimport Statistics from './Statistics/Statistics';\nimport Friendlist from './Friendlist/Friendlist';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nconst App = () => (\n  <>\n    <Profile\n      imgURL={user.avatar}\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <Friendlist friends={friends} />\n    <TransactionHistory items={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}